version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "mic3:1:1,mic4:1:1"

  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  micro_1:
    build: ./fastapi_app
    restart: unless-stopped
    image: micro_1
    container_name: micro_1
    command: sh -c "gunicorn --workers=3 -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker main:app"
    environment:
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
      - KAFKA_GROUP_ID=mic1
      - ROUTER_PREFIX=/api
      - CUSTOMER_TAG=mic2
      - APP_NAME=fast_api_1
      - KAFKA_TAGS=["mic1"]
      - PRODUCER_MESSAGE=ping
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - micro_1:/micro_1/data
    ports:
      - 8001:8000
    networks:
      - broker-kafka

  micro_2:
    build: ./fastapi_app
    restart: unless-stopped
    image: micro_1
    container_name: micro_2
    command: sh -c "gunicorn --workers=3 -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker main:app"
    environment:
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
      - KAFKA_GROUP_ID=mic2
      - ROUTER_PREFIX=/api
      - CUSTOMER_TAG=mic1
      - APP_NAME=fast_api_2
      - KAFKA_TAGS=["mic2"]
      - PRODUCER_MESSAGE=pong
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8002:8000
    volumes:
      - micro_2:/micro_2/data
    networks:
      - broker-kafka

networks:
  broker-kafka:
    driver: bridge

volumes:
  micro_1:
  micro_2:
