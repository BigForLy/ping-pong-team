version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "mic3:1:1,mic4:1:1"

  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  micro_3:
    build: ./fastapi_app_3
    restart: unless-stopped
    image: micro_3
    container_name: micro_3
    command: sh -c "uvicorn main:app --proxy-headers --host 0.0.0.0 --port 8000"
    environment:
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - micro_3:/micro_3/data
    ports:
      - 8003:8000
    networks:
      - broker-kafka

  micro_4:
    build: ./fastapi_app_4
    restart: unless-stopped
    image: micro_4
    container_name: micro_4
    command: sh -c "uvicorn main:app --proxy-headers --host 0.0.0.0 --port 8000"
    environment:
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8004:8000
    volumes:
      - micro_4:/micro_4/data
    networks:
      - broker-kafka

networks:
  broker-kafka:
    driver: bridge

volumes:
  micro_3:
  micro_4:
